@startuml Current Order flow
actor Client
box "YAS" #D6EAF8 
participant Storefront as NextJs
participant CartService as cart
participant ProductService as product
participant OrderService as order
participant CustomerService as customer
participant PaymentService as payment
participant PayPalService as ppal
end box
participant PaypalAPI as ppAPI
==Go to cart page==
autonumber 1.1 "<b> 0.0"
Client -> NextJs: Browse /storefront/carts
activate NextJs
NextJs -> cart: GET /api/cart/storefront/carts/{customer-id}
activate cart
cart --> NextJs: 200 OK
deactivate cart
NextJs --> Client: 200 OK
deactivate NextJs
==Create checkout==
autonumber inc A
Client -> NextJs: Click "Proceed to check out"
activate NextJs
NextJs -> order: POST /api/order/storefront/checkouts
note right
Body={email, note, coupon,
products:[{id, name, quantity, price}]}

Header: Authorization
end note
activate order
order --> NextJs: 201 CREATED
deactivate order
NextJs --> Client: 201 CREATED
NextJs --> Client: Route to /storefront/checkout/{checkout-id}
deactivate NextJs
==Go to checkout page==
autonumber inc A
Client -> NextJs: Browse /storefront/checkout/{checkout-id}
activate NextJs
NextJs -> order: GET /api/order/storefront/checkout/{checkout-id}
activate order
order --> NextJs: 200 OK
deactivate order
NextJs -> customer: GET /api/storefront/addresses?customerId={user-id}
activate customer
customer --> NextJs: 200 OK
deactivate customer
NextJs --> Client: 200 OK
deactivate NextJs
==Add new address (optional) if user has default address==
autonumber inc A
Client -> NextJs: Click "Add new address"
activate NextJs
NextJs -> customer: POST /api/customer/storefront/user-address
activate customer
customer --> NextJs: 201 CREATED
deactivate customer
NextJs --> Client: 201 CREATED
deactivate NextJs
==Create order==
autonumber inc A
Client -> NextJs: Click "Proceed to payment" 
activate NextJs
NextJs -> order: POST /api/order/storefront/orders
note right
Body = {checkoutId, email, note, tax, 
discount, number of items, total price, delivery fee, 
coupon code, delivery method, payment status="PENDING",
order items: [{id, product id, product name, quantity,
product price, note?, discount?, taxAmount?, taxPercent?}]}

Header: Authorization
end note
activate order
order -> product: PUT /api/backoffice/products/subtract-quantity
activate product
product --> order: 204 NO CONTENT
deactivate product
order -> cart: DELETE /api/storefront/carts/multi-item?productIds=
activate cart
cart --> order: 204 NO CONTENT
deactivate cart
order --> NextJs: 201 CREATED
deactivate order
NextJs --> Client: 201 CREATED
alt Paypal case
    autonumber 5.9.1.1
    NextJs -> ppal: POST /api/payment-paypal/init
    activate ppal
    ppal -> ppAPI: POST /orders
    activate ppAPI
    ppAPI --> ppal: Redirect API
    deactivate ppAPI
    ppal --> NextJs: Redirect API
    deactivate ppal
    NextJs --> Client: Redirect to PayPal payment
    deactivate NextJs
    Client -> ppAPI: GET payment page
    activate ppAPI
    ppAPI --> Client: 200 OK
    Client -> ppAPI: POST payment
    ppAPI --> Client: Redirect /complete-payment/capture
    deactivate ppAPI
    Client -> NextJs: GET /complete-payment/capture
    activate NextJs
    NextJs -> ppal: POST /api/payment-paypal/capture
    activate ppal
    ppal -> ppAPI: GET order captures
    activate ppAPI
    ppAPI --> ppal: 200 OK
    deactivate ppAPI
    ppal -> payment: POST /api/payment/capture
    activate payment
    payment -> order: PUT /api/order/storefront/checkouts/status
    activate order
    order --> payment: 200 OK
    deactivate order
    payment -> order: PUT /api/order/storefront/orders/status
    activate order
    order --> payment: 200 OK
    deactivate order
    payment --> ppal: 201 CREATED
    deactivate payment
    ppal --> NextJs: 201 CREATED
    deactivate ppal
    NextJs --> Client: 200 OK
else COD case
    autonumber inc C
    NextJs -> Client: Not implemented
end
autonumber 5.10 "<b> 0.0"
deactivate NextJs
    
deactivate NextJs
@enduml